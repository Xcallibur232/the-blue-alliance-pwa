name: On push

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install
        run: npm install
      - name: Test
        if: contains(github.event.commits[0].message, '[clowntown]') == false
        env:
          CI: true
        run: npm test
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install
        run: npm install
      - name: Check lint
        if: contains(github.event.commits[0].message, '[clowntown]') == false
        run: npm run lint
      - name: Check formatting
        if: contains(github.event.commits[0].message, '[clowntown]') == false
        run: npm run prettier
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install
        run: npm install
      - name: Build
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          STACKDRIVER_API_KEY: ${{ secrets.STACKDRIVER_API_KEY }}
          TBA_API_AUTH_KEY: ${{ secrets.TBA_API_AUTH_KEY }}
        run: npm run build
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: .next
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test, lint, build]
    if: contains(github.event.commits[0].message, '[nodeploy]') == false
    steps:
      - uses: actions/checkout@v1
      - name: Download production artifacts
        uses: actions/download-artifact@v1
        with:
          name: dist
          path: .next
      - name: Deploy with Google Cloud Platform
        uses: actions-hub/gcloud@268.0.0
        env:
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ secrets.GCLOUD_AUTH }}
        with:
          args: app deploy --version 1 --quiet
